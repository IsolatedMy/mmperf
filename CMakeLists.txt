cmake_minimum_required(VERSION 3.18 FATAL_ERROR)
project(codegen C CXX)

include(ExternalProject)

if(NOT DEFINED MLIR_SOURCE)
  set(MLIR_SOURCE ../external/llvm-project/llvm)
endif()
if(NOT DEFINED MLIR_BUILD)
  set(MLIR_BUILD ${CMAKE_BINARY_DIR}/mlir)
endif()
set(RUY_SOURCE ../external/ruy)

set(MLIR_INSTALL ${CMAKE_BINARY_DIR}/mlir-install)
ExternalProject_Add(mlir
  PREFIX ${CMAKE_BINARY_DIR}/mlir
  SOURCE_DIR ${MLIR_SOURCE}
  BINARY_DIR ${MLIR_BUILD}
  INSTALL_DIR ${MLIR_INSTALL}
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DLLVM_BUILD_LLVM_DYLIB:BOOL=OFF
    -DLLVM_LINK_LLVM_DYLIB:BOOL=OFF
    -DLLVM_INSTALL_UTILS:BOOL=ON
    -DLLVM_TARGETS_TO_BUILD:STRING=X86
    -DLLVM_ENABLE_PROJECTS:STRING=mlir
    -DLLVM_INCLUDE_TOOLS:BOOL=ON
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DLLVM_ENABLE_ASSERTIONS:BOOL=ON
    -DLLVM_ENABLE_RTTI:BOOL=ON
)

option(USE_MLIR "Enable MLIR" OFF)
option(USE_MKL "Enable MKL" OFF)
option(USE_OPENBLAS "Enable OpenBLAS" OFF)
option(USE_HALIDE "Enable Halide" OFF)
option(USE_RUY "Enable Ruy" OFF)

set(SIZE_FILE ${CMAKE_CURRENT_LIST_DIR}/benchmark_sizes.txt CACHE INTERNAL "File containing matrix sizes to be benchmarked")
set(TARGET_CPU "skylake-avx512" CACHE INTERNAL "Target CPU for MLIR")
set(VECTOR_WIDTH "512" CACHE INTERNAL "Vector width for MLIR")

ExternalProject_Add(matmul
  DEPENDS mlir
  PREFIX ${CMAKE_BINARY_DIR}/matmul
  SOURCE_DIR ${CMAKE_SOURCE_DIR}/matmul
  BINARY_DIR ${CMAKE_BINARY_DIR}/matmul
  INSTALL_COMMAND ${CMAKE_COMMAND} -E echo "Skipping install step."
  CMAKE_ARGS
    -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}
    -DMLIR_DIR=${MLIR_INSTALL}/lib/cmake/mlir
    -DCMAKE_BUILD_TYPE:STRING=Release
    -DUSE_MLIR=${USE_MLIR}
    -DMKL_DIR=${MKL_DIR}
    -DUSE_MKL=${USE_MKL}
    -DSIZE_FILE=${SIZE_FILE}
    -DUSE_OPENBLAS=${USE_OPENBLAS}
    -DUSE_HALIDE=${USE_HALIDE}
    -DHALIDE_DIR=${HALIDE_DIR}
    -DTARGET_CPU=${TARGET_CPU}
    -DVECTOR_WIDTH=${VECTOR_WIDTH}
    -DUSE_RUY=${USE_RUY}
    -DRUY_DIR=${RUY_DIR}
)

unset(USE_MLIR CACHE)
unset(USE_MKL CACHE)
unset(USE_OPENBLAS CACHE)
unset(USE_HALIDE CACHE)
unset(USE_RUY CACHE)
unset(SIZE_FILE CACHE)
unset(TARGET_CPU CACHE)
unset(VECTOR_WIDTH CACHE)
